version: "3.8"
services:
  postgres:
    build:
      context: ./backend
      dockerfile: Dockerfile.postgres
    container_name: postgres-1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: photo_aggr
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - monitoring

  mongodb:
    build:
      context: ./backend
      dockerfile: Dockerfile.mongodb
    container_name: mongodb-1
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./backend/photo_aggr:/docker-entrypoint-initdb.d/photo_aggr
    networks:
      - monitoring

  api_server:
    build:
      context: ./backend
      dockerfile: Dockerfile.api_server
    volumes:
      - ./backend/static:/app/static
    container_name: api-server-1
    environment:
      MONGO_URI: "mongodb://mongodb:27017/"
      MONGO_INITDB_DATABASE: "photo_aggr"
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: photo_aggr
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mongodb
    restart: on-failure
    networks:
      - monitoring

  frontend:
    build:
      context: ./frontend/vue-lessons
      dockerfile: Dockerfile.vue-app
    ports:
      - "5173:5173" # Совпадает с vite.config.js
    volumes:
      - ./frontend/vue-lessons:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - monitoring

  prometheus:
    build:
      context: .
      dockerfile: Dockerfile.prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

volumes:
  pgdata:
  mongo-data:
  grafana_data:

networks:
  monitoring:
